name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    permissions:
      contents: read
      pull-requests: write
      packages: write

    runs-on: ubuntu-latest

    env:
      NUGET_SOURCE_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      CONTAINER_REGISTRY: ghcr.io
      CONTAINER_REPOSITORY: ${{ github.repository_owner }}/dot-release

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
          dotnet-quality: preview
          cache: true
          cache-dependency-path: '**/packages.lock.json'
          source-url: ${{ env.NUGET_SOURCE_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: >-
          dotnet publish DotRelease.Cli
          --configuration release
          --os linux
          --arch x64
          --no-self-contained
          -t:PublishContainer
          -p:ContinuousIntegrationBuild=true
          -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY }}
          -p:ContainerRepository=${{ env.CONTAINER_REPOSITORY }}
          -bl

      - run: >-
          dotnet publish DotRelease.PowerShell
          --configuration release
          --no-self-contained
          -p:ContinuousIntegrationBuild=true
          -bl

      - run: >-
          dotnet test
          --configuration release
          --os linux
          --arch x64
          --no-restore
          --no-build

      - name: Publish PowerShell
        uses: natescherer/publish-powershell-action@v1
        with:
          target: package
          token: ${{ secrets.GITHUB_TOKEN }}
          path: 'artifacts/publish/DotRelease.PowerShell/release'

      - run: >-
          dotnet nuget push
          'artifacts/package/release/*.nupkg'
          --skip-duplicate

      - uses: actions/upload-artifact@v3
        with:
          name: NuGet Packages
          path: 'artifacts/package/release/*.nupkg'

      - uses: actions/upload-artifact@v3
        with:
          name: Build Logs
          path: '**/*.binlog'
        if: ${{ always() }}
